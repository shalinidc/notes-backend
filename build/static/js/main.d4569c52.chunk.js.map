{"version":3,"sources":["components/notes.js","services/notes.js","components/notification.js","components/footer.js","App.js","index.js"],"names":["Notes","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","className","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","notesToShow","filter","map","i","key","find","changeNote","returnedNote","catch","error","setTimeout","n","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"sPAceA,MAZf,YAA0C,IAA1BC,EAAyB,EAAzBA,KAAOC,EAAkB,EAAlBA,iBAEbC,EAAQF,EAAKG,UAAY,qBAAuB,oBAEtD,OACI,6BACA,4BAAKH,EAAKI,SACV,4BAAQC,QAASJ,GAAmBC,K,gBCPtCI,EAAU,oDAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCH9BK,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEnB,OAAe,OAAZA,EACQ,KAIP,yBAAKC,UAAU,SAAf,IAAyBD,EAAzB,MCQOE,EAfA,WAOX,OACI,yBAAKC,MAPW,CAChBC,MAAQ,QACRC,UAAW,SACXC,SAAU,KAKN,6BACA,uGC+EGC,MApFf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAEJC,EAFI,KAEGC,EAFH,OAGmBF,mBAAS,qBAH5B,mBAGJG,EAHI,KAGKC,EAHL,OAImBJ,oBAAS,GAJ5B,mBAIJK,EAJI,KAIKC,EAJL,OAK6BN,mBAAS,MALtC,mBAKJO,EALI,KAKUC,EALV,KAOXC,qBAAU,WACNC,IAEK1B,MAAK,SAAA2B,GACFT,EAASS,QAElB,IAEHC,QAAQC,IAAIZ,GAEZ,IAsCMa,EAAcT,EAAUJ,EAASA,EAAMc,QAAO,SAAAxC,GAAI,OAAuB,IAAnBA,EAAKG,aAE7D,OACI,6BACI,qCACA,kBAAC,EAAD,CAAcc,QAAWe,IACzB,6BACI,4BAAQ3B,QAAS,kBAAI0B,GAAYD,KAAjC,QACUA,EAAU,YAAa,QAGrC,4BACKS,EAAYE,KAAI,SAACzC,EAAM0C,GAAP,OACb,kBAAC,EAAD,CACIC,IAAKD,EACL1C,KAAMA,EACNC,iBAAkB,kBAtCjB,SAAUa,GACtB,sCAAkCA,GAA3C,IACMd,EAAO0B,EAAMkB,MAAK,SAAA5C,GAAI,OAAIA,EAAKc,KAAOA,KACtC+B,EAAU,eAAO7C,EAAP,CAAaG,WAAYH,EAAKG,YAE9CgC,EAAmBrB,EAAI+B,GAClBpC,MAAK,SAAAqC,GACNnB,EAASD,EAAMe,KAAI,SAAAzC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAM8C,SAEjDC,OAAM,SAAAC,GACHf,EAAgB,YAAD,OAAajC,EAAKI,QAAlB,yCACf6C,YAAW,WACPhB,EAAgB,QACjB,KACHN,EAASD,EAAMc,QAAO,SAAAU,GAAC,OAAIA,EAAEpC,KAAOA,SAwBAb,CAAiBD,EAAKc,WAG1D,0BAAMqC,SAzDF,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACflD,QAASwB,EACT2B,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG/BxB,EACYmB,GACP7C,MAAK,SAAAmB,GACFD,EAASD,EAAMkC,OAAOhC,IACtBC,EAAW,SA8CP,2BAAOgC,MAAOjC,EACPkC,SAzBE,SAACV,GACtBvB,EAAWuB,EAAMW,OAAOF,UAyBZ,4BAAQG,KAAK,UAAb,aAEJ,kBAAC,EAAD,QCjFhBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.d4569c52.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Notes({note,  toggleImportance}){\n\n    const label = note.important ? 'Make not important' : 'Make it important'\n\n    return(\n        <div>\n        <li>{note.content}</li>\n        <button onClick={toggleImportance}>{label}</button>\n        </div>\n    )\n}\n\nexport default Notes","import axios from 'axios';\n\nconst baseUrl = 'https://frozen-mesa-60080.herokuapp.com/api/notes';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll: getAll,\n    create: create,\n    update: update\n}\n\n/*can also be written as export default {getAll, create, update}*/\n","import React from 'react';\n\nconst Notification = ({message}) => {\n\n    if(message === null){\n        return null;\n    }\n\n    return(\n        <div className='error'> {message} </div>\n    )\n}\n\nexport default Notification;","import React from \"react\";\n\nconst Footer = () => {\n    const footerStyle = {\n        color : 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n        </div>\n    )\n}\n\nexport default Footer;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Notes from './components/notes';\nimport noteService from './services/notes';\nimport Notification from \"./components/notification\";\nimport Footer from \"./components/footer\";\n\nfunction App() {\n\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('add a new note...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(()=>{\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes);\n            });\n    }, []);\n\n    console.log(notes);\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n        }\n\n        noteService\n            .create(noteObject)\n            .then(newNote =>{\n                setNotes(notes.concat(newNote));\n                setNewNote('');\n            });\n    }\n\n    const toggleImportance = function (id)  {\n        const url = `http://localhost:3001/notes/${id}`\n        const note = notes.find(note => note.id === id);\n        const changeNote = {...note, important: !note.important};\n\n        noteService.update(id, changeNote)\n            .then(returnedNote => {\n            setNotes(notes.map(note => note.id !== id ? note: returnedNote));\n            })\n            .catch(error => {\n                setErrorMessage(`the note ${note.content} was already deleted from the server`);\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n                setNotes(notes.filter(n => n.id !== id));\n            })\n    }\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value);\n    }\n\n    const notesToShow = showAll ? notes : (notes.filter(note => note.important === true));\n\n        return (\n            <div>\n                <h1>Notes</h1>\n                <Notification message = {errorMessage} />\n                <div>\n                    <button onClick={()=>setShowAll(!showAll)}>\n                        Show {showAll ? 'important': 'all'}\n                    </button>\n                </div>\n                <ul>\n                    {notesToShow.map((note, i) =>\n                        <Notes\n                            key={i}\n                            note={note}\n                            toggleImportance={() => toggleImportance(note.id)}/>\n                    )}\n                </ul>\n                <form onSubmit={addNote}>\n                    <input value={newNote}\n                           onChange={handleNoteChange} />\n                    <button type=\"submit\"> Submit </button>\n                </form>\n                <Footer />\n            </div>\n        );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}